@model Finanzas.Models.Categories;
@using System.Globalization
@using Finanzas.Models
@{
    ViewBag.Title = "Gastos";
    var Months = ViewBag.Months;
    List<Categories> Categories = ViewBag.Categories;
    List<PaymentMethods> PaymentMethods = ViewBag.PaymentMethods;
    var CurrentMonth = ViewBag.CurrentMonth;
    List<Bills> Bills = ViewBag.Bills;
    List<Icons> Icons = ViewBag.Icons;
    Balance Balance = ViewBag.Balance;
}
<div class="">
<div class="bg-white">
<div>
<!-- MOBILE MENÚ -->
<div class="z-40 hidden" role="dialog" aria-modal="true">

<div class="fixed inset-0 bg-black bg-opacity-25"></div>

<div class="fixed inset-0 z-40 flex">

<div class="relative ml-auto flex h-full w-full max-w-xs flex-col overflow-y-auto bg-white py-4 pb-12 shadow-xl">
<div class="flex items-center justify-between px-4">
    <h2 class="text-lg font-medium text-gray-900">Filters</h2>
    <button type="button" class="-mr-2 flex h-10 w-10 items-center justify-center rounded-md bg-white p-2 text-gray-400">
        <span class="sr-only">Close menu</span>
        <!-- Heroicon name: outline/x-mark -->
        <svg class="h-6 w-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" d="M6 18L18 6M6 6l12 12"/>
        </svg>
    </button>
</div>

<!-- Filters -->
<form class="mt-4 border-t border-gray-200">
<h3 class="sr-only">Categories</h3>
<ul role="list" class="px-2 py-3 font-medium text-gray-900">
    <li>
        <a href="#" class="block px-2 py-3">Totes</a>
    </li>

    <li>
        <a href="#" class="block px-2 py-3">Backpacks</a>
    </li>

    <li>
        <a href="#" class="block px-2 py-3">Travel Bags</a>
    </li>

    <li>
        <a href="#" class="block px-2 py-3">Hip Bags</a>
    </li>

    <li>
        <a href="#" class="block px-2 py-3">Laptop Sleeves</a>
    </li>
</ul>

<div class="border-t border-gray-200 px-4 py-6">
    <h3 class="-mx-2 -my-3 flow-root">
        <!-- Expand/collapse section button -->
        <button type="button" class="flex w-full items-center justify-between bg-white px-2 py-3 text-gray-400 hover:text-gray-500" aria-controls="filter-section-mobile-0" aria-expanded="false">
            <span class="font-medium text-gray-900">Color</span>
            <span class="ml-6 flex items-center">
                <!--
                Expand icon, show/hide based on section open state.

                Heroicon name: mini/plus
                -->
                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                    <path d="M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z"/>
                </svg>
                <!--
                Collapse icon, show/hide based on section open state.

                Heroicon name: mini/minus
                -->
                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                    <path fill-rule="evenodd" d="M4 10a.75.75 0 01.75-.75h10.5a.75.75 0 010 1.5H4.75A.75.75 0 014 10z" clip-rule="evenodd"/>
                </svg>
            </span>
        </button>
    </h3>
    <!-- Filter section, show/hide based on section state. -->
    <div class="pt-6" id="filter-section-mobile-0">
        <div class="space-y-6">
            <div class="flex items-center">
                <input id="filter-mobile-color-0" name="color[]" value="white" type="checkbox" class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500">
                <label for="filter-mobile-color-0" class="ml-3 min-w-0 flex-1 text-gray-500">White</label>
            </div>

            <div class="flex items-center">
                <input id="filter-mobile-color-1" name="color[]" value="beige" type="checkbox" class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500">
                <label for="filter-mobile-color-1" class="ml-3 min-w-0 flex-1 text-gray-500">Beige</label>
            </div>

            <div class="flex items-center">
                <input id="filter-mobile-color-2" name="color[]" value="blue" type="checkbox" checked class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500">
                <label for="filter-mobile-color-2" class="ml-3 min-w-0 flex-1 text-gray-500">Blue</label>
            </div>

            <div class="flex items-center">
                <input id="filter-mobile-color-3" name="color[]" value="brown" type="checkbox" class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500">
                <label for="filter-mobile-color-3" class="ml-3 min-w-0 flex-1 text-gray-500">Brown</label>
            </div>

            <div class="flex items-center">
                <input id="filter-mobile-color-4" name="color[]" value="green" type="checkbox" class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500">
                <label for="filter-mobile-color-4" class="ml-3 min-w-0 flex-1 text-gray-500">Green</label>
            </div>

            <div class="flex items-center">
                <input id="filter-mobile-color-5" name="color[]" value="purple" type="checkbox" class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500">
                <label for="filter-mobile-color-5" class="ml-3 min-w-0 flex-1 text-gray-500">Purple</label>
            </div>
        </div>
    </div>
</div>

<div class="border-t border-gray-200 px-4 py-6">
    <h3 class="-mx-2 -my-3 flow-root">
        <!-- Expand/collapse section button -->
        <button type="button" class="flex w-full items-center justify-between bg-white px-2 py-3 text-gray-400 hover:text-gray-500" aria-controls="filter-section-mobile-1" aria-expanded="false">
            <span class="font-medium text-gray-900">Category</span>
            <span class="ml-6 flex items-center">
                <!--
                Expand icon, show/hide based on section open state.

                Heroicon name: mini/plus
                -->
                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                    <path d="M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z"/>
                </svg>
                <!--
                Collapse icon, show/hide based on section open state.

                Heroicon name: mini/minus
                -->
                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                    <path fill-rule="evenodd" d="M4 10a.75.75 0 01.75-.75h10.5a.75.75 0 010 1.5H4.75A.75.75 0 014 10z" clip-rule="evenodd"/>
                </svg>
            </span>
        </button>
    </h3>
    <!-- Filter section, show/hide based on section state. -->
    <div class="pt-6" id="filter-section-mobile-1">
        <div class="space-y-6">
            <div class="flex items-center">
                <input id="filter-mobile-category-0" name="category[]" value="new-arrivals" type="checkbox" class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500">
                <label for="filter-mobile-category-0" class="ml-3 min-w-0 flex-1 text-gray-500">New Arrivals</label>
            </div>

            <div class="flex items-center">
                <input id="filter-mobile-category-1" name="category[]" value="sale" type="checkbox" class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500">
                <label for="filter-mobile-category-1" class="ml-3 min-w-0 flex-1 text-gray-500">Sale</label>
            </div>

            <div class="flex items-center">
                <input id="filter-mobile-category-2" name="category[]" value="travel" type="checkbox" checked class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500">
                <label for="filter-mobile-category-2" class="ml-3 min-w-0 flex-1 text-gray-500">Travel</label>
            </div>

            <div class="flex items-center">
                <input id="filter-mobile-category-3" name="category[]" value="organization" type="checkbox" class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500">
                <label for="filter-mobile-category-3" class="ml-3 min-w-0 flex-1 text-gray-500">Organization</label>
            </div>

            <div class="flex items-center">
                <input id="filter-mobile-category-4" name="category[]" value="accessories" type="checkbox" class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500">
                <label for="filter-mobile-category-4" class="ml-3 min-w-0 flex-1 text-gray-500">Accessories</label>
            </div>
        </div>
    </div>
</div>

<div class="border-t border-gray-200 px-4 py-6">
    <h3 class="-mx-2 -my-3 flow-root">
        <!-- Expand/collapse section button -->
        <button type="button" class="flex w-full items-center justify-between bg-white px-2 py-3 text-gray-400 hover:text-gray-500" aria-controls="filter-section-mobile-2" aria-expanded="false">
            <span class="font-medium text-gray-900">Size</span>
            <span class="ml-6 flex items-center">
                <!--
                Expand icon, show/hide based on section open state.

                Heroicon name: mini/plus
                -->
                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                    <path d="M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z"/>
                </svg>
                <!--
                Collapse icon, show/hide based on section open state.

                Heroicon name: mini/minus
                -->
                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                    <path fill-rule="evenodd" d="M4 10a.75.75 0 01.75-.75h10.5a.75.75 0 010 1.5H4.75A.75.75 0 014 10z" clip-rule="evenodd"/>
                </svg>
            </span>
        </button>
    </h3>
    <!-- Filter section, show/hide based on section state. -->
    <div class="pt-6" id="filter-section-mobile-2">
        <div class="space-y-6">
            <div class="flex items-center">
                <input id="filter-mobile-size-0" name="size[]" value="2l" type="checkbox" class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500">
                <label for="filter-mobile-size-0" class="ml-3 min-w-0 flex-1 text-gray-500">2L</label>
            </div>

            <div class="flex items-center">
                <input id="filter-mobile-size-1" name="size[]" value="6l" type="checkbox" class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500">
                <label for="filter-mobile-size-1" class="ml-3 min-w-0 flex-1 text-gray-500">6L</label>
            </div>

            <div class="flex items-center">
                <input id="filter-mobile-size-2" name="size[]" value="12l" type="checkbox" class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500">
                <label for="filter-mobile-size-2" class="ml-3 min-w-0 flex-1 text-gray-500">12L</label>
            </div>

            <div class="flex items-center">
                <input id="filter-mobile-size-3" name="size[]" value="18l" type="checkbox" class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500">
                <label for="filter-mobile-size-3" class="ml-3 min-w-0 flex-1 text-gray-500">18L</label>
            </div>

            <div class="flex items-center">
                <input id="filter-mobile-size-4" name="size[]" value="20l" type="checkbox" class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500">
                <label for="filter-mobile-size-4" class="ml-3 min-w-0 flex-1 text-gray-500">20L</label>
            </div>

            <div class="flex items-center">
                <input id="filter-mobile-size-5" name="size[]" value="40l" type="checkbox" checked class="h-4 w-4 rounded border-gray-300 text-indigo-600 focus:ring-indigo-500">
                <label for="filter-mobile-size-5" class="ml-3 min-w-0 flex-1 text-gray-500">40L</label>
            </div>
        </div>
    </div>
</div>
</form>
</div>
</div>
</div>

<main class="mx-auto max-w-8xl px-4 sm:px-6 lg:px-8">
<div class="flex flex-col md:flex-row items-center md:items-baseline justify-center md:justify-between border-b border-gray-200 pt-12 pb-6">
    <h1 class="text-4xl font-bold tracking-tight text-gray-900 my-4 md:my-0">Registra tus gastos</h1>
    <form class="w-7/12" action="~/Dashboard/SaveBalance" id="BalanceForm" method="post">
        <div class="w-full flex gap-3">
            @{
                string Income = Double.Parse(Balance.Income).ToString("N0");
                string Expenses = Double.Parse(Balance.Expenses).ToString("N0");
                string Remaining = Double.Parse(Balance.Remaining).ToString("N0");
            }
            <div class="w-1/3 border-b-2 border-cyan-500 flex justify-center relative">
                <input type="hidden" name="Income" id="BalanceIncomeHidden" value="@Balance.Income">
                <input onkeyup="formatBalance()" type="text" class="h-10 text-center appearance-none" id="BalanceIncome" placeholder="Ingresos" value="$ @Income">
                <span class="absolute top-full text-sm text-cyan-500">Ingresos de @CurrentMonth.Item2</span>
            </div>
            <div class="w-1/3 border-b-2 border-cyan-500 flex justify-center relative">
                <input type="text" readonly="true" disabled="true" class="h-10 text-center bg-transparent" id="BalanceExpenses" placeholder="Egresos" value="$ @Expenses">
                <span class="absolute top-full text-sm text-cyan-500">Egresos de @CurrentMonth.Item2</span>
            </div>
            <div class="w-1/3 border-b-2 border-cyan-500 flex justify-center relative">
                <input type="text" class="h-10 text-center bg-transparent" disabled="true" id="BalanceRemaining" placeholder="Restante" value="$ @Remaining">
                <span class="absolute top-full text-sm text-cyan-500">Restante de @CurrentMonth.Item2</span>
            </div>
        </div>
    </form>
    <div class="flex items-center mt-10 md:mt-0">

    </div>
</div>

<section aria-labelledby="products-heading" class="pt-6 pb-12">

<div class="grid grid-cols-1 gap-x-8 gap-y-10 lg:grid-cols-5">

<div class="col-span-1">
    <div class="flex flex-col items-center">
        <div class="pt-4 flex flex-col items-center border-b-2 border-cyan-500">
            <label for="orderBy">Registrar gastos de</label>
            <form id="FormMonth" action="~/Dashboard/SelectMonth" method="post">
                <select onchange="SubmitForm('FormMonth')" class="py-2 text-center" name="Name" id="MonthSelect">
                    <option value="">Mes</option>
                    @{
                        foreach (var Month in Months)
                        {
                            if (@CurrentMonth.Item1 == @Month.idMonth)
                            {
                                <option selected value="@Month.Name"> @Month.Name </option>
                            }
                            else
                            {
                                <option value="@Month.Name"> @Month.Name </option>
                            }
                        }
                    }
                </select>
            </form>
        </div>
    </div>

    <script >
                    function SubmitForm(idForm) {
                        document.getElementById(idForm).submit();
                    }
                </script>
    <div class="border-b border-gray-200 py-6">
        <h3 class="-my-3 flow-root">

            <button type="button" class="flex w-full items-center justify-between bg-white py-3 text-sm text-gray-400 hover:text-gray-500" aria-controls="filter-section-1" aria-expanded="false">
                <span class="font-medium text-gray-900">Categorias</span>
            </button>
        </h3>

        <div class="pt-6" id="filter-section-1">
            <div class="space-y-4 flex flex-col items-center">
                <select name="" id="" class="h-10 w-3/4 border-b-2 border-cyan-500 focus:border-b-2">
                    @{
                        if (Categories.Count > 0)
                        {
                            foreach (Categories category in Categories)
                            {
                                <option value="@category.idCategory">@category.Name</option>
                            }
                        }
                        else
                        {
                            <option value="">Sin Categorias</option>
                        }
                    }
                </select>

                <div class="flex flex-row w-3/4 justify-center relative">
                    <form action="~/Dashboard/AddCategory/" method="post">
                        <input type="text" asp-for="" name="Name" id="Name" class="h-10 w-full pl-1 border-2 border-cyan-500 rounded-md placeholder:text-sm" placeholder="Añadir Categoria">
                        <button type="submit" class="appearance-none ml-6 flex items-center absolute right-1 top-2/4 -translate-y-2/4">
                            <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                <path d="M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z"/>
                            </svg>
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
    <div class="border-b border-gray-200 py-6">
        <h3 class="-my-3 flow-root">

            <button type="button" class="flex w-full items-center justify-between bg-white py-3 text-sm text-gray-400 hover:text-gray-500" aria-controls="filter-section-1" aria-expanded="false">
                <span class="font-medium text-gray-900">Medios de Pago</span>
            </button>
        </h3>
        <div class="pt-6" id="filter-section-1">
            <div class="space-y-4 flex flex-col items-center">
                <select name="" id="" class="h-10 w-3/4 border-b-2 border-cyan-500 focus:border-b-2">
                    @{
                        if (PaymentMethods.Count > 0)
                        {
                            foreach (PaymentMethods paymentMethod in PaymentMethods)
                            {
                                <option value="@paymentMethod.idPaymentMethod">@paymentMethod.Name</option>
                            }
                        }
                        else
                        {
                            <option value="">Sin Medios de Pago</option>
                        }
                    }
                </select>
                <div class="flex flex-row w-3/4 justify-center relative">
                    <form action="~/Dashboard/AddPaymentMethod/" method="post">
                        <input type="text" asp-for="" name="Name" id="Name" class="h-10 w-full pl-1 border-2 border-cyan-500 rounded-md placeholder:text-sm" placeholder="Añadir Medio">
                        <button type="submit" class="appearance-none ml-6 flex items-center absolute right-1 top-2/4 -translate-y-2/4">
                            <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                                <path d="M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z"/>
                            </svg>
                        </button>
                    </form>
                </div>

            </div>
        </div>
    </div>
</div>

<div class="lg:col-span-4">

    <div class="min-h-96 rounded-lg border-4 border-dashed border-cyan-200 lg:h-full md:p-10 pt-3 flex flex-col items-center">

        <div class="w-3/4 h-16 border-b-2 border-cyan-500 text-3xl font-extrabold text-cyan-500 flex items-center justify-center">
            <span>@CurrentMonth.Item2</span>
        </div>

        @{
            if (Bills.Count > 0)
            {
                <div class="flex w-full gap-2 justify-center mt-4">

                    <div class="relative mt-1 rounded-md shadow-sm border-b-2 w-[63px]  border-cyan-500 h-7">
                        <div class="flex items-center justify-center h-full">
                            <span class="sm:text-sm text-cyan-500">
                                ICO
                            </span>
                        </div>
                    </div>

                    <div class="relative w-[197px] mt-1 rounded-md shadow-sm border-b-2 border-cyan-500 h-7">
                        <div class="w-full flex items-center justify-center h-full pl-3 pr-3">
                            <span class="sm:text-sm text-cyan-500">
                                Nombre
                            </span>
                        </div>
                    </div>

                    <div class="relative  w-[197px] mt-1 rounded-md shadow-sm border-b-2 border-cyan-500 h-7">
                        <div class="w-full flex items-center justify-center h-full pl-3 pr-3">
                            <span class="sm:text-sm text-cyan-500">
                                Valor
                            </span>
                        </div>
                    </div>

                    <div class="relative  w-[197px] mt-1 rounded-md shadow-sm border-b-2 border-cyan-500 h-7">
                        <div class="w-full flex items-center justify-center h-full pl-3 pr-3">
                            <span class="sm:text-sm text-cyan-500">
                                Categorias
                            </span>
                        </div>
                    </div>
                    <div class="relative  w-[197px] mt-1 rounded-md shadow-sm border-b-2 border-cyan-500 h-7">
                        <div class="w-full flex items-center justify-center h-full pl-3 pr-3">
                            <span class="sm:text-sm text-cyan-500">
                                Medios de Pago
                            </span>
                        </div>
                    </div>
                    <div class="w-[63px]">

                    </div>
                </div>
            }
        }


        @{
            if (Bills.Count > 0)
            {
                <form id="SaveBillsForm" method="post">
                    @{
                        for (int i = 0; i < Bills.Count; i++)
                        {
                            <input type="hidden" name="Bills[@i].idBill" value="@Bills[i].idBill">
                            <div class="w-full flex gap-2 justify-center mt-4 ">

                                <div class="relative mt-1 rounded-md shadow-sm border-2 border-cyan-500 h-10 w-[63px]">
                                    <div class="flex items-center h-full">
                                        <select name="Bills[@i].idIcons" class="fa appearance-none h-full rounded-md border-transparent bg-transparent py-2 w-[60px] text-center text-gray-500 focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm">
                                            @{
                                                foreach (var Icon in Icons)
                                                {
                                                    if (Icon.idIcons == Bills[i].idIcons)
                                                    {
                                                        <option selected value="@Icon.idIcons" class="fa">@Html.Raw(Icon.Code)</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="@Icon.idIcons" class="fa">@Html.Raw(Icon.Code)</option>
                                                    }
                                                }
                                            }

                                        </select>
                                    </div>
                                </div>

                                <div class="relative w-[197px] mt-1 rounded-md shadow-sm border-2 border-cyan-500 h-10">
                                    <div class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3 pr-3">
                                        <span class="sm:text-sm text-cyan-500">
                                            <i class="fa-solid fa-pencil"></i>
                                        </span>
                                    </div>
                                    <input type="text" name="Bills[@i].Name" value="@Bills[i].Name" id="Name" class="block w-full rounded-md border-gray-300 pl-9 pr-12 h-full focus:border-0 focus:ring-0 sm:text-sm pl-2" placeholder="Nombre">
                                </div>

                                <div class="relative w-[197px] mt-1 rounded-md shadow-sm border-2 border-cyan-500 h-10">
                                    <div class="pointer-events-none absolute inset-y-0 left-0 flex items-center pl-3">
                                        <span class="text-gray-500 sm:text-sm">$</span>
                                    </div>
                                    @{
                                        string idPrice = "price" + i;
                                        string hiddenPrice = "hiddenPrice" + i;
                                        string formatPrice = Bills[i].Cost.ToString("N0");
                                    }
                                    <input type="hidden" name="Bills[@i].Cost" id="@hiddenPrice" value="@Bills[i].Cost">
                                    <input onkeyup="formatPrice('@idPrice', '@hiddenPrice')" type="text" value="@formatPrice" id="@idPrice" class="appearance-none block w-full rounded-md border-gray-300 pl-7 pr-12 h-full focus:border-0 focus:ring-0 sm:text-sm" placeholder="0.00">
                                </div>


                                <div class="w-[197px]">
                                    <div class="relative mt-1 rounded-md shadow-sm border-2 border-cyan-500 ">
                                        <select name="Bills[@i].idCategory" class="relative w-full cursor-default rounded-md border border-gray-300 bg-white py-2 pl-3 text-left shadow-sm focus:border-cyan-500 focus:outline-none focus:ring-1 focus:ring-indigo-500 sm:text-sm">
                                            @{
                                                if (Categories.Count > 0)
                                                {
                                                    foreach (Categories category in Categories)
                                                    {
                                                        if (category.idCategory == Bills[i].idCategory)
                                                        {
                                                            <option selected value="@category.idCategory">@category.Name</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="@category.idCategory">@category.Name</option>
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    <option value="">Sin Categorias</option>
                                                }
                                            }
                                        </select>
                                    </div>
                                </div>

                                <div class="w-[197px] ">
                                    <div class="relative mt-1 rounded-md shadow-sm border-2 border-cyan-500 ">
                                        <select name="Bills[@i].idPaymentMethod" class="relative w-full rounded-md border border-gray-300 bg-white py-2 pl-3 text-left shadow-sm focus:border-cyan-500 focus:outline-none focus:ring-1 focus:ring-indigo-500 sm:text-sm">

                                            @{
                                                if (PaymentMethods.Count > 0)
                                                {
                                                    foreach (PaymentMethods paymentMethod in PaymentMethods)
                                                    {
                                                        if (paymentMethod.idPaymentMethod == Bills[i].idPaymentMethod)
                                                        {
                                                            <option selected value="@paymentMethod.idPaymentMethod">@paymentMethod.Name</option>
                                                        }
                                                        else
                                                        {
                                                            <option value="@paymentMethod.idPaymentMethod">@paymentMethod.Name</option>
                                                        }
                                                    }
                                                }
                                                else
                                                {
                                                    <option value="">Sin Medios de Pago</option>
                                                }
                                            }
                                        </select>
                                    </div>
                                </div>
                                <div class="w-[63px] h-10 mt-1 flex items-center justify-center">
                                    <button onclick="deleteBill(@Bills[i].idBill)">
                                        <i class="fa-solid fa-trash hover:text-red-500"></i>
                                    </button>
                                </div>

                            </div>
                        }
                    }
                </form>
            }
            else
            {
                <div class=" w-3/4 h-[100px] flex items-center space-x-2 justify-center">
                    <span>No tienes registros de gastos para @CurrentMonth.Item2</span>
                </div>
            }
        }
        <div class=" w-3/4 h-[100px] flex items-center space-x-2 justify-center">
            <form action="~/Dashboard/AddBill" method="post">
                <button type="submit" class="bg-cyan-500 p-3 min-w-[100px] rounded-md text-white text-xs">Agregar gasto</button>
            </form>
            <button onclick="SaveBills()" class="bg-cyan-500 p-3 rounded-md min-w-[100px] text-white text-xs">Guardar</button>
        </div>

        <script>
            const SaveBills = () => {
                        
                    // obtener los formularios
                    var form1 = document.getElementById("BalanceForm");
                    var form2 = document.getElementById("SaveBillsForm");
                    
                    // crear un objeto FormData y agregar los datos de ambos formularios
                    var formData = new FormData(form1);
                    if (form2 != null){ 
                        for (var pair of new FormData(form2)) {
                          formData.append(pair[0], pair[1]);
                        }
                    }

                    
                    // crear una instancia de XMLHttpRequest y enviar la solicitud
                    var xhr = new XMLHttpRequest();
                    xhr.open("POST", "Dashboard/SubmitBothForms", true);
                    xhr.onreadystatechange = function () {
                      if (xhr.readyState === 4 && xhr.status === 200) {
                        // hacer algo con la respuesta
                      }
                    };
                    xhr.send(formData);
                    
                    location.reload();
                    
                /*document.getElementById("SaveBillsForm").submit();
                document.getElementById("BalanceForm").submit();*/
            }
            
            const deleteBill = (id) => {
                var xhrDelete = new XMLHttpRequest();
                xhrDelete.open("POST", "Dashboard/DeleteBill", true);
                xhrDelete.onreadystatechange = function () {
                  if (xhrDelete.readyState === 4 && xhr.status === 200) {
                    // hacer algo con la respuesta
                  }
                };
               
                var data = {
                    idBill: id
                };
                xhrDelete.send(formDataDelete);
                //location.reload();
            }
        </script>
    </div>

</div>
</div>
</section>
</main>
</div>
</div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/numeral.js/2.0.6/numeral.min.js"></script>
<script>
    const formatPrice = (idPrice, hiddenPrice) => {
        let inputPrice = document.getElementById(idPrice);
        let price = parseInt(inputPrice.value.replace(/[^0-9]/g, ''));
        let priceFormat = new Intl.NumberFormat('es-CO', { currency: 'COP' }).format(price);
        inputPrice.value = priceFormat;
        document.getElementById(hiddenPrice).value = price;
    }
    
    const formatBalance = () => {
        let inputBalanceIncome = document.getElementById("BalanceIncome");
        let inputBalanceExpenses = document.getElementById("BalanceExpenses");
        let inputBalanceRemaining = document.getElementById("BalanceRemaining");
        
        
        
        let balanceIncome = parseInt(inputBalanceIncome.value.replace(/[^0-9]/g, ''));
        let balanceExpenses = parseInt(inputBalanceExpenses.value.replace(/[^0-9]/g, ''));
        let balanceRemaining = balanceIncome - balanceExpenses;

        
        document.getElementById("BalanceIncomeHidden").value = balanceIncome;
        inputBalanceIncome.value = new Intl.NumberFormat('es-CO', {style: "currency", minimumFractionDigits: 0, maximumFractionDigits: 0, currency: 'COP' }).format(balanceIncome);
        inputBalanceExpenses.value = new Intl.NumberFormat('es-CO', {style: "currency", minimumFractionDigits: 0, maximumFractionDigits: 0, currency: 'COP' }).format(balanceExpenses);
        inputBalanceRemaining.value = new Intl.NumberFormat('es-CO', {style: "currency", minimumFractionDigits: 0, maximumFractionDigits: 0, currency: 'COP' }).format(balanceRemaining);
    }
    
</script>